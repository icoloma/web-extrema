gcpCertClarification: "This course, together with real-world, hands-on experience, is the best preparation for the Google Certification Exams. Gain industry recognition, validate your technical expertise and take your career to the next level by becoming a Google Certified Professional. More info <a href=\"https://cloud.google.com/certification/\" target=\"_blank\">here</a>."
springCertClarification: "After the class, purchase your <b>Certification Exam</b> <a href=\"https://academy.pivotal.io/store-catalog#headingOne_EDU-1120-APP\" target=\"_blank\">here</a>."
JoinUs: 
  Title: Join us
  Description: We do not have any vacancies at the moment, but if you think that we should talk send your CV to <a href="mailto:cv@extrema-sistemas.com">cv@extrema-sistemas.com</a>
  Profile:
    Description:
      - We are looking for a <b>Full Stack Engineer</b> (junior or senior) to join us for our new adventures in Santa Cruz de Tenerife or Madrid (we are also fans of working remotely from home, if that’s your thing). You can bring your existing experience or acquire it with us. For us it is not a requirement to have previous work experience, but to be open to learn and enjoy teaching others. 
      - If you know or want to learn Java and JavaScript with a modern stack, we are what you are looking for. We'll get you certified to deliver Google Cloud courses for IBEX35 companies. We will learn a lot together.
    Points:
      Responsibilities:
        - Develop applications for the server side (Java), web responsive (React, Webpack, etc.) and Android (React Naive)
        - Provide training for official Google Cloud courses (CPD200, CPB200, Google Cloud Fundamentals, etc.)
        - Once a year help us organize Commit, the biggest technical event in Spain. It’s a lot of fun!
        - "Give back: participate in community events, either as a speaker or attendee."
        - Do consulting in these fields for large corporations.
      Required skills:
        - Demonstrable experience developing applications
        - Fluent in either Java or JavaScript
        - Easy to communicate complex concepts in a simple way
      Preferable:
        - Fluent English
        - Good knowledge of HTML and CSS
        - Experience designing projects for the Cloud
        - At least one profile in Github, Stack Overflow or equivalent
      What we offer:
        - Dynamic team
        - Flexible schedule
        - Budget for training and events
        - Birthdays are free
    Contact: If this sounds good, do not leave us without knowing what it would be like to meet you. <a href="mailto:cv@extrema-sistemas.com">Send your CV</a>, including some site where we can see your work.
AboutUsTitle: About us
AboutUsContent:
  - At Extrema Sistemas we do IT consulting and training. As Certified Training Partner by Google and Pivotal in Spain and Italy, we deliver all the official training courses for Google Cloud and Spring. 
  - We have developed the software for strategic projects for airports, naval traffic management, banks and logistics companies. From 2012 to 2017 we have been organizing Codemotion Madrid. In 2018 we created <a href="https://commit-conf.com" target="_blank">Commit</a>, the largest conference in Spain about software development. 
  - We are a small and dynamic company, where every member of the team works from a different location.
"i18n": "English"
"Subscribe": "Subscribe"
newsletter: "//extrema-sistemas.us9.list-manage.com/subscribe/post?u=6b2bcf54ecc61ae4b7f084a25&id=e0033eb79a"
suscribeToNewsletter: Suscribe to our newsletter
suscribeToNewsletterDesc: To get the latest updates about out courses, suscribe to our newsletter.
Free: Free
IntroduceTextToSearch: Introduce text to search
Search: Search
From: From
Technology: Technology
Level: Level
Beginner: Beginner
Advanced: Advanced
Duration: Duration
6h: 6 hours
1d: 1 day
2d: 2 days
3d: 3 days
4d: 4 days
DevelopingAndConsultingTitle: Developing and consulting
DevelopingAndConsultingDesc: Enable your team to ramp up faster with hands-on experience
SeeClients: Our clients
TrainingLeadTitle: Training lead
TrainingLeadDesc: It's hard to keep up to speed. We can help you on that.
SeeTraining: Our courses
PrivacyPolicy: Privacy
Links: Links
Legal: Legal
cloudComputingDesc: Developing cloud-based applications can be challenging sometimes. Learn with us how to design, build and deploy applications using all the advantages of a cloud native project.
bigDataDesc: When knowledge is everything, it is important to know how to make the most of the data available to us.
ContactForPrice: Ask for a quote

"from": "from"
"VATexempt": "VAT exempt."
"subsidized": "These courses can be subsidized in Spain by <a href='http://www.fundaciontripartita.org/' target='_blank'>Fundación Tripartita</a>. Other countries may have other conditions, please contact us for details."
"subsidizedShort": "Subsidized in Spain by <a href='http://www.fundaciontripartita.org/' target='_blank'>Fundación Tripartita</a>"
"Price": "Price"
"standardRequirements": "<b>Laptop required:</b> Attendees should bring their own laptops with enough permissions to install additional software."
"creditCardRequired": "<b>Credit card is required</b> to sign up for the free trial, although your credit card will not be billed."
"RegisterFor": "Register for"
"indexTrainingDesc": "We work hard to bring you the best IT training courses"
"doWeHaveYourAttention": "Got your attention?"
"attentionDesc": "If this sounds like a project where you could use some help, just drop us a line to start talking."
"followUsBlog": "Read our blog"
"followUsTwitter": "Follow us on Twitter"
"ContactBody": "We are a small team that answers the phone and replies to every e-mail. Feel free to drop us a line, any time."
"Address": "Address"
"langEnEs": "Available in English and Spanish."
"langEnEsIt": "Available in English, Spanish and Italian."
"langEnIt": "Available in English and Italian."
"duration6h": "6 hours."
"duration8h": "8 hours."
"duration16h": "16 hours."
"duration24h": "24 hours."
"duration32h": "32 hours."
"duration40h": "40 hours."

"Home": "Home"
"Training": "Training"
"Contact": "Contact"
"defaultDesc": "Extrema Sistemas is the lead training company in Spain and Italy, provider of certification courses for Google Cloud and the Spring technology stack."
"indexTrainingTitle": "Enjoy the training lead"
"springDesc": "The official courses about the portfolio of products that have become <i>de facto</i> standard for the development of Java applications."
"googleCloudPlatformDesc": "Google Cloud enables developers to build, test and deploy applications on Google’s highly scalable and reliable infrastructure."
"googleTrainingPartner": "The <b>Official Training</b> that helps you get the most of Google Cloud technologies and earn the Google Certified Professional Certifications."
"springCertifiedPartner": "The only <b>official courses</b> recommended to ensure you have mastered the Pivotal technology before taking the Spring certification exams."
"readMore": "Read more"
"getInContact": "Get in contact now"
"consultingTitle": "Get the natural advantage from consulting"
"consultingDesc": "Join the list of clients that are relying on our consulting and mentoring services."
"Courses": "Courses"
"showCourseContents": "View course contents"
"hideCourseContents": "Hide course contents"
"availableCourses": "Available courses"
"askForMoreInfo": "Ask for more info"
"details": "Details"
"discountsNotCumulative": "Discounts are not cumulative."
"tripartita": "Courses sponsored by Fundación Tripartita."
"Discounts": "Discounts"
"backToCourses": "Back to courses"
"Duration": "Duration"
"Language": "Language"
"Audience": "Audience"
"Requirements": "Requirements"
"Objectives": "Objectives"
"afterCompleting": "After completing this course"
"Syllabus": "Syllabus"


SpringCore:
  title: "Spring Core Official Course"
  requirements: "This course is perfect for developers with or without prior experience with the Spring framework."
  audience: "This course is designed for Java developers and architects."
  desc: "<p>Core Spring is the four-day flagship Spring Framework training. In this training, students build a Spring-powered Java application that demonstrates the <b>Spring Framework</b> and other Spring technologies like <b>Spring AOP</b> and <b>Spring Security</b> in an intensely productive, hands-on setting.</p><p>The perfect way to demonstrate your proficiency with the Pivotal product portfolio is to obtain an industry-recognized Pivotal Certification. The role-based certification exams are designed to test and validate your product knowledge and help you advance your career.</p><p><b>Pivotal recommends attending the corresponding training course prior to attempting a certification exam</b>. The lab-based curriculum enables you to fully comprehend key technical concepts, enhance your product expertise, and ultimately helps prepare you for the certification exam.</p><p>Core Spring is the perfect training if:</p><ul><li>You are interested in learning all about <b>developing Java applications with Spring</b></li><li>You have an upcoming project and <b>need to learn Spring quickly</b></li><li>You want to become <b>Spring Certified</b> to improve your career opportunities</li></ul><p>To further improve your Spring developer skills we recommend to take <a href=\"?q=spring%20boot&technology=spring\">Spring Boot Developer</a> or <a href=\"?q=spring%20cloud&technology=spring\">Spring Cloud Developer</a> after completing Core Spring.</p>"
  objectives:
    description: "<p>At the end of the training, you should have an understanding of Spring and associated technologies and be able to do the following:</p>"
    bullets:
      - Use the <b>Spring Framework</b> to develop Java applications
      - Use <b>dependency injection</b> to set up and configure applications
      - <b>Test Spring-based applications</b>
      - Set up Spring configuration using <b>XML, annotations and Java configuration</b>
      - Use <b>Spring Data JPA</b> and <b>JDBC</b> to rapidly implement relational database access
      - Use <b>Spring support for transactions</b>
      - Use <b>aspect-oriented programming (AOP)</b> to add behavior to objects
      - Develop a basic Web application with <b>Spring MVC</b>
      - Use <b>Spring Security</b> to secure Web applications
      - Use Spring to easily build <b>REST web services</b>
      - Take the <b>Spring Boot</b> shortcut to productivity
      - Start the journey to <b>Microservices</b> and <b>Cloud Native Applications</b>
  syllabus: 
    - title: "Introduction to Spring"
      content:
        - Java configuration and the Spring application context
        - "@Configuration and @Bean annotations"
        - "@Import: working with multiple configuration files"
        - Launching a Spring Application and obtaining Beans
    - title: "Spring Java configuration: A deeper look"
      content:
        - External properties & Property sources
        - Environment abstraction
        - Bean scope, bean profiles
        - Spring Expression Language (SpEL)
        - "How it Works: Inheritance based proxies"
    - title: "Annotation-based dependency injection"
      content:
        - Autowiring and component scanning
        - Java configuration versus annotations, mixing.
        - "Lifecycle annotations: @PostConstruct and @PreDestroy"
        - Stereotypes and meta-annotations
    - title: "XML dependency injection"
      content:
        - XML syntax, constructor & setter injection
        - Resource prefixes
        - Namespaces and best practices when using XML
        - XML profile selection
    - title: "The bean lifecycle: How does Spring work internally?"
      content:
        - "The init phase: available interceptors"
        - "The init phase: what is the difference between XML, annotations and Java configuration?"
        - "The use and destruction phases"
    - title: "Testing a Spring-based application"
      content:
        - Spring and Test Driven Development
        - "@ContextConfiguration and @RunWith annotations"
        - "Application context caching and the @DirtiesContext annotation"
        - "Profile selection with @ActiveProfiles"
        - "Easy test data setup with @Sql"
    - title: "Aspect-oriented programming"
      content:
        - What problems does AOP solve?
        - Differences between Spring AOP and AspectJ
        - Defining pointcut expressions
        - "Implementing an advice: @Around, @Before, @After"
    - title: "Data access and JDBC with Spring"
      content:
        - How Spring integrates with existing data access technologies
        - DataAccessException hierarchy
        - Implementing caching using @Cacheable
        - jdbc namespace and Spring‘s JdbcTemplate
    - title: "Database transactions with Spring"
      content:
        - "@Transactional annotation"
        - "Transactions configuration: XML versus annotations"
        - "Isolation levels, transaction propagation and rollback rules"
        - "Transactions and integration testing"
        - "Should you use read-only transactions?"
    - title: "JPA with Spring and Spring Data"
      content:
        - "Quick introduction to ORM with JPA"
        - "Benefits of using Spring with JPA"
        - "JPA configuration in Spring"
        - "Spring Data JPA dynamic repositories"
    - title: "Spring in a Web application"
      content:
        - "Configuring Spring in a Web application"
        - "Introduction to Spring MVC, required configuration"
        - "Controller method signatures"
        - "Views and ViewResolvers"
        - "Using @Controller and @RequestMapping annotations"
    - title: "Spring Boot"
      content:
        - "Using Spring Boot to bypass most configuration"
        - "Simplified dependency management with starter POMs"
        - "Packaging options, JAR or WAR"
        - "Easily overriding Spring Boot defaults"
    - title: "Spring Boot - Going further"
      content:
        - Going beyond the default settings
        - Customizing Spring Boot configuration
        - Logging control
        - Configuration properties using YAML
        - Boot-driven testing
    - title: "Spring Security"
      content:
        - "What problems does Spring Security solve?"
        - "Configuring authentication and intercepting URLs"
        - "The Spring Security tag library for JSPs"
        - "Security at the method level"
        - "Customizing the Spring Security filter chain"
    - title: "REST with Spring MVC"
      content:
        - "An introduction to the REST architectural style"
        - "Controlling HTTP response codes with @ResponseStatus"
        - "Implementing REST with Spring MVC, @RequestBody, @ResponseBody"
        - "Spring MVC’s HttpMessageConverters and automatic content negotiation"
    - title: "Microservices with Spring Cloud"
      content:
        - "Microservice Architectures"
        - "Challenges with cloud-native applications"
        - "Using Spring Cloud"
        - "Developing a simple microservice system"


SpringBootDeveloper:
  title: "Spring Boot Developer"
  requirements: "Basic Java, Git and IDE knowledge and understanding of Spring and/or completion of the Core Spring course."
  audience: "This course is designed for developers who want to increase their understanding of Spring Boot and its major features."
  desc: "<p>Building on the benefits of the Spring framework, Spring Boot represents the next chapter in Java development. Spring Boot’s opinionated approach removes much of the boilerplate and configuration that characterizes Spring, making development faster and deployment easier.</p><p>This course offers experience with Spring Boot and its major features, including auto-configuration, data access, Actuator, and more. On completion, participants will have a foundation for creating enterprise-ready applications.</p><p>Please note that this course is a subset of the material in our 4 day Core Spring course - there is no need to take both courses. This course is recommended if you have a good working knowledge of Spring Basics but are new to Spring Boot.</p>"
  objectives:
    description: "<p>Upon completion of this course, participants will understand how Spring Boot enhances the following:</p>"
    bullets:
      - "Describe the benefits provided by Spring Boot"
      - "Initialize a project using Spring Boot Starters"
      - "Leverage Spring Boot's auto configuration features to enable JDBC setup and initialization"
      - "Create simplified backing-store solutions using Spring Data and JPA"
      - "Build a simple MVC application using Spring Boot, embedded Web Server and fat JARs or classic WARs"
      - "Build a RESTful Web application"
      - "Use Spring Security to secure Web and REST endpoints"
      - "Enable and extend metrics and monitoring capabilities using Spring Boot actuator"
      - "Leverage advance configuration capabilities"
      - "Utilize Spring Boot enhancements to testing"
  syllabus: 
    - title: "Review of Spring Essentials"
      content:
        - "Why Spring"
        - "Configuration using Spring"
        - "Bean creation"
        - "Data Management"
    - title: "Spring Boot Introduction"
      content:
        - "Introduction to Spring Boot"
        - "Value Proposition of Spring Boot"
        - "High-level Spring Boot features"
        - "Creating a simple Boot application using Spring Initializr web-site"
    - title: "Spring Boot dependencies, auto-configuration and runtime"
      content:
        - "Dependency management using Spring Boot starters"
        - "How auto-configuration works"
        - "Configuration properties"
        - "Overriding auto-configuration"
        - "Using CommandLineRunner"
    - title: "JPA with Spring and Spring Data"
      content:
        - "Quick introduction to ORM with JPA"
        - "Benefits of using Spring with JPA"
        - "JPA configuration in Spring"
        - "Configuring Spring JPA using Spring Boot"
        - "Spring Data JPA dynamic repositories"
    - title: "Spring MVC architecture and overview"
      content:
        - "Introduction to Spring MVC and request processing"
        - "Controller method signatures"
        - "Using @Controller, @RestController and @GetMapping annotations"
        - "Configuring Spring MVC with Spring Boot"
        - "Spring Boot packaging options, JAR or WAR"
    - title: "REST with Spring MVC"
      content:
        - "An introduction to the REST architectural style"
        - "Controlling HTTP response codes with @ResponseStatus"
        - "Implementing REST with Spring MVC, @RequestMapping, @RequestBody and @ResponseBody"
        - "Spring MVC’s HttpMessageConverters and automatic content negotiation"
    - title: "Spring Security"
      content:
        - "What problems does Spring Security solve?"
        - "Configuring authentication"
        - "Implementing authorization by intercepting URLs"
        - "Authorization using OAuth"
        - "Authorization at the Java method level"
        - "Understanding the Spring Security filter chain"
    - title: "Actuators, metrics and health indicators"
      content:
        - "Enabling Spring Boot Actuator"
        - "Custom Metrics"
        - "Health Indicators"
        - "Creating custom Health Indicators"
        - "External monitoring systems"
    - title: "Spring Boot testing enhancements"
      content: 
        - "Spring Boot testing overview"
        - "Integration testing and slices"
        - "Slices to test different layers of the application"

SpringCloudDeveloper:
  title: "Spring Cloud Developer"
  audience: "This course is designed for developers interested in learning how to construct scalable and fault-tolerant cloud-native applications using the Spring Cloud family of projects."
  requirements: "This course assumes you have significant Java experience and one of the following:<ul><li>Completion of Pivotal’s Spring Core course</li><li>Completion of Pivotal’s Spring Boot course</li><li>Spring Boot experience</li></ul>"
  desc: "<p>Cloud-native application architectures and processes are becoming a proven strategy to enable fast delivery of business value.</p><p>Spring Boot and Spring Cloud are a powerful combination for building modern cloud-native application architectures that leverage industry battle-tested Spring ecosystem and 3rd party solutions to solve accompanying problems of scaling, availability and fault tolerance.</p><p>The 3-day Spring Cloud Developer course provides participants with an in-depth coverage of cloud-native and microservices patterns using Spring Cloud and Netflix components to help solve challenges associated with running distributed, cloud-native applications over a microservices architecture.</p>"
  objectives:
    description: "<p>Upon completion of this course, participants will be able to demonstrate how each of following components contribute to Cloud-Native applications deployment, scaling and fault tolerance characteristics:</p>"
    bullets:
      - "Distributed Application"
      - "Service-to-service Calls"
      - "Service Registration and Discovery"
      - "Client vs. Server Side Load balancing"
      - "Circuit Breakers"
      - "Config Server"
      - "Distributed Trace"
  syllabus:
    - title: "Introduction"
      content:
        - "Spring Cloud Introduction"
    - title: "Distributed application"
      content:
        - "Application Continuum"
        - "Spring Cloud Dependencies"
    - title: "Service Registry and Discovery"
      content:
        - "Service Registry Pattern"
        - "Eureka Service Registry"
        - "Service Discovery Clients"
        - "Eureka Server REST Operations"
        - "Eureka Client Health Check"
    - title: "Client Load Balancing"
      content:
        - "Spring Cloud Netflix Ribbon"
        - "Retry and Custom Load Balancing Rule"
    - title: "Circuit Breaker"
      content:
        - "Netflix Hystrix"
        - "Stats Aggregation"
    - title: "Config Server"
      content:
        - "External Configuration"
        - "Spring Cloud Config Server"
        - "Distributed Updates"
        - "Vault Backend"
        - "Handling Transient Failures"
    - title: "Declarative REST client"
      content:
        - "Netflix Feign Client"
    - title: "Distributed trace"
      content:
        - "Producer - Sleuth"
        - "Consumer - Zipkin"
    - title: "Security with OAuth 2.0"
      content:
        - "Securing REST Endpoints"

SpringWeb:
  title: "Spring Web Official Course"
  audience: "This course is designed for developers interested in developing web applications with Spring."
  desc: "<p>Spring Web is a 4-day training on web application development led by Spring experts. This hands-on training teaches you how to apply the latest in Spring to create rich web applications.</p><p>The perfect way to demonstrate your proficiency with the Pivotal product portfolio is to obtain an industry-recognized Pivotal Certification. The role-based certification exams are designed to test and validate your product knowledge and help you advance your career.</p><p><b>Pivotal recommends attending the corresponding training course prior to attempting a certification exam</b>. The lab-based curriculum enables you to fully comprehend key technical concepts, enhance your product expertise, and ultimately helps prepare you for the certification exam.</p><p>Spring Web is the perfect training if:</p><ul><li>You want to become an expert at using the <b>Spring Framework</b></li><li>You want to show your developer skills by building beautiful <b>rich web applications</b></li><li><b>You took Core Spring</b> and want to further improve your developer skills</li><li>You are working on/have planned a <b>rich web project</b></li><li>You are interested in being granted the <b>Spring Web certification</b></li></ul><p>To further improve your Spring developer skills we recommend to take <a href=\"?technology=spring&q=enterprise\">Enterprise Spring</a> after completing Spring Web training.</p>"
  objectives:
    description: "<p>At the end of the training, you should have an understanding of Spring and associated technologies for web development and be able to do the following:</p>"
    bullets:
      - "<b>Develop web applications</b> using the Spring Framework"
      - "Use <b>Spring Tool Suite</b>"
      - "<b>Implement RESTful servers</b> using Spring MVC"
      - "Use <b>Spring Boot</b> to build applications quickly with autoconfiguration"
      - "<b>Secure Web applications</b> with Spring Security"
      - "<b>Test Web applications</b> for correctness and performance"
      - "Understand and use <b>Web Sockets</b> with Spring MVC"
  syllabus:
    - title: "Spring overview"
      content:
        - "Introduction to Spring configuration"
        - Bean life cycle
        - Configuration alternatives
        - Integration testing with Spring
    - title: Getting started with Spring Web MVC
      content:
        - Spring model-view-controller (MVC) overview
        - DispatcherServlet
        - Controller programming model overview
        - Spring MVC views
        - Simplifying configuration
    - title: Spring MVC configuration I
      content:
        - XML configuration and the mvc namespace
        - Using Java Configuration as an alternative to XML configuration
        - Running in a Servlet 3 environment without web.xml
        - Interceptors
        - Message sources
    - title: Managing layouts in Spring MVC
      content:
        - Page layout and structure
        - Creating reusable templates with Apache Tiles
        - Configuring Tiles in Spring MVC
    - title: Spring MVC configuration II
      content:
        - Resource configuration and the resource pipeline
        - CORS and @CrossOrigin
        - Spring MVC infrastructure Beans
        - URL mappings
        - Handler mappers and handler adapters
    - title: Using views in Spring MVC
      content: 
        - Views and view resolvers
        - Setting up a View resolver chain
        - Alternating views and Content Negotiation
        - JSON and XML Views
    - title: Form handling with Spring MVC
      content: 
        - Form Rendering
        - Type Conversion
        - Data Binding
        - Form submission lifecycle
        - Form validation (using Spring and JSR 330 validation)
        - Form Object management
    - title: Site personalization with Spring MVC
      content:
        - "Working in several languages: internationalization support in Spring MVC"
        - Look-and-feel changes using themes and locales
        - Handling Mobile Devices with Spring Mobile
    - title: Implementing REST
      content: 
        - Overview of REST and HATEOAS concepts
        - Using Spring’s RestTemplate for clients access
        - Extending Spring MVC to support RESTful interactions
        - HAL and the Spring HATEAOS project
    - title: Exception handling
      content: 
        - Using @RequestStatus with Exceptions
        - Adding Exception handlers to Controllers
        - Global exception handling using Controller Advices and Exception resolvers
        - Exception handling for RESTful interactions
    - title: Building client applications with Ajax
      content:
        - Ajax and Spring MVC
        - Using JavaScript frameworks
        - "Example: Spring MVC REST and jQuery"
        - Creating custom tags to encapsulate JavaScript
    - title: Web application security with Spring Security
      content: 
        - Motivation for Spring Security
        - Spring Security in a Web environment
        - Using Spring Security tag libraries
        - Method security
    - title: Debugging and testing Web applications
      content:
        - Debugging applications in a browser
        - Testing Web applications using Spring’s Mock MVC framework
        - Using Spring HtmlUnit
    - title: Spring Boot
      content: 
        - Fast development and deployment using Spring Boot
        - Simplified dependency management with starter POMs
        - Packaging options - JAR or WAR
        - Easily overriding Spring Boot defaults
    - title: Spring Websockets
      content:
        - Overview of Websocket development
        - Using Websockets and Stomp with Spring MVC

SpringEnterprise:
  title: "Enterprise Spring"
  audience: "This course is designed for Java developers and architects."
  desc: "<p>Enterprise Spring is a four-day training course that is led by Spring experts who will discuss the most important topics and technologies related to enterprise application integration. This hands-on training teaches you how to apply Spring technologies to solve integration problems faced by server-side developers.</p><p>The perfect way to demonstrate your proficiency with the Pivotal product portfolio is to obtain an industry-recognized Pivotal Certification. The role-based certification exams are designed to test and validate your product knowledge and help you advance your career.</p><p><b>Pivotal recommends attending the corresponding training course prior to attempting a certification exam</b>. The lab-based curriculum enables you to fully comprehend key technical concepts, enhance your product expertise, and ultimately helps prepare you for the certification exam.</p><p>Enterprise Spring is the perfect training if:</p><ul><li>You want to become an expert at using the <b>Spring Framework</b></li><li><b>You took Core Spring</b> and want to further improve your developer skills</li><li>You want to be able to solve even the <b>most complex problems with Spring</b></li><li>You are working on/have planned a <b>large Spring project</b></li><li>You are interested in being granted the <b>expert Spring certification</b></li></ul><p>To further improve your Spring developer skills we recommend to take <a href=\"?technology=spring&q=web\">Spring Web</a> after completing Enterprise Spring.</p>"
  objectives: 
    description: "<p>At the end of the training, you should have an understanding of Spring and associated technologies for enterprise integration and be able to do the following:</p>"
    bullets:
      - Create <b>concurrent applications</b> and <b>schedule tasks</b> using Spring
      - Creating and consuming <b>REST Web services</b>
      - Use <b>JMS</b> for asynchronous communication
      - Understand and use <b>distributed transactions</b>
      - Use <b>Spring Batch</b> for Enterprise Integration based on batch processing
      - Use <b>Spring Integration</b> for pipes-and-filters integration
      - Use the configuration <b>DSL</b>
      - Have a basic understanding of <b>Spring XD</b>
  syllabus: 
    - title: Styles of Enterprise Integration
      content:
        - Integration Styles Pros/Cons
        - Spring Support
    - title: Tasks and Scheduling
      content:
        - Introduction to concurrency
        - Java Concurrency support
        - Spring’s task scheduling support
    - title: REST Webservices
      content:
    - title: Spring Integration configuration
      content:
        - Using the DSL
    - title: Spring Integration advanced features
      content: 
        - Splitting and aggregating
        - Dispatcher configuration
    - title: Introduction to Spring Batch
      content: 
        - Batch concepts
        - High-Level overview
        - Job parameters and job identity
        - Quick start using Spring Batch
        - Readers, Writers &amp; Processors
        - JDBC Item Readers
    - title: Spring Batch restart and recovery
      content:
        - ExecutionContext
        - Reading flat files
        - Sharing state between steps
        - Intro to skip, retry, repeat and restart
        - Listeners
        - Business logic delegation
        - Using Java Configuration
    - title: Spring Batch admin and parallel processing
      content:
        - Spring Batch Admin
        - Scaling and parallel processing
    - title: Spring XD
      content: 
        - Spring XD for Batch Jobs, Integration flow and Data Ingestion
        - Spring XD Installation
        - Working with Streams (Definition, Source vs Sink, deployment, use-cases)
        - Working with Jobs (Definition, deployment, monitoring, use-cases)

CP100:
  title: "Google Cloud Fundamentals: Core Infrastructure"
  requirements: "Familiarity with application development, Linux operating systems, systems operations, and data analytics/machine learning is helpful in understanding the technologies covered."
  audience: "This class is intended for solutions developers, systems operations professionals, and solution architects planning to deploy applications and create application environments on Google Cloud. This class is also suitable for executives and business decision makers evaluating the potential of Google Cloud to address their business needs."
  desc: "<p>This 1 day instructor-led class provides an overview of Google Cloud products and services. Through a combination of presentations and hands-on labs, participants learn the value of Google Cloud and how to incorporate cloud-based solutions into business strategies.</p>"
  objectives: 
    description: "<p>This course teaches participants the following skills:</p>"
    bullets:
      - Identify the purpose and value of Google Cloud products and services
      - Interact with Google Cloud services
      - Describe ways in which customers have used Google Cloud
      - "Choose among and use application deployment environments on Google Cloud: Google App Engine, Google Kubernetes Engine, and Google Compute Engine"
      - "Choose among and use Google Cloud storage options: Google Cloud Storage, Google Cloud SQL, Google Cloud Bigtable, and Google Cloud Datastore"
      - Make basic use of BigQuery, Google’s managed data warehouse for analytics
      - Make basic use of Cloud Deployment Manager, Google’s tool for creating and managing cloud resources through templates
      - Make basic use of Google Stackdriver, Google’s monitoring, logging, and diagnostics system
  syllabus:
    - title: Introducing Google Cloud
      content:
        - Explain the advantages of Google Cloud
        - "Define the components of Google's network infrastructure, including: Points of presence, data centers, regions, and zones"
        - Understand the difference between Infrastructure-as-a-Service (IaaS) and Platform-as-a-Service (PaaS)
    - title: Getting Started with Google Cloud
      content:
        - Identify the purpose of projects on Google Cloud
        - Understand the purpose of and use cases for Identity and Access Management
        - List the methods of interacting with Google Cloud
        - "Lab: Getting Started with Google Cloud"
    - title: Virtual Machines and Networks in the Cloud
      content:
        - Identify the purpose of and use cases for Google Compute Engine
        - Understand the various Google Cloud Platform networking and operational tools and services
        - "Lab: Compute Engine"
    - title: Storage in the Cloud
      content:
        - "Understand the purpose of and use cases for: Google Cloud Storage, Google Cloud SQL, Google Cloud Bigtable, and Google Cloud Datastore"
        - Learn how to choose between the various storage options on Google Cloud
        - "Lab: Google Cloud Storage and Cloud SQL"
    - title: Containers in the Cloud
      content:
        - Define the concept of a container and identify uses for containers
        - Identify the purpose of and use cases for Google Kubernetes Engine and Kubernetes
        - "Lab: Kubernetes Engine"
    - title: Applications in the Cloud
      content:
        - Understand the purpose of and use cases for Google App Engine
        - Contrast the App Engine Standard environment with the App Engine Flexible environment
        - Understand the purpose of and use cases for Google Cloud Endpoints
        - "Lab: App Engine"
    - title: Developing, Deploying, and Monitoring in the Cloud
      content:
        - Understand options for software developers to host their source code
        - Understand the purpose of template-based creation and management of resources
        - Understand the purpose of integrated monitoring, alerting, and debugging
        - "Lab: Deployment Manager and Stackdriver"
    - title: Big Data and Machine Learning in the Cloud
      content:
        - Understand the purpose of and use cases for the products and services in the Google Cloud big data and machine learning platforms
        - "Lab: BigQuery"

CPA200:
  title: "Google Cloud for Architects (CPA200)"
  requirements: "Before attending this course, participants should have attended Google Cloud Fundamentals: Core Infrastructure"
  audience: "The intended audience is people who will be designing solutions using Google Cloud but who do not have a lot of experience with designing cloud-based solutions."
  desc: "<p>This course is intended for people who will be designing solutions using Google Cloud but who do not have a lot of experience with designing cloud-based solutions. Students will understand: the core tenants to be considered when designing & deploying to a cloud; to be confident enough to leverage what Google Cloud offers without focusing on undifferentiated heavy lifting; how to get started on Google Cloud and be able to identify the appropriate Google Cloud products to use for popular architectural patterns.</p>"
  objectives:
    description: "<p>At the end of this one-day class, participants will be able to:</p>"
    bullets:
      - Understand the core tenants to be considered when designing & deploying to a cloud
      - Be confident enough to leverage what Google Cloud offers without focusing on undifferentiated heavy lifting
      - Understand how to get started on Google Cloud
      - Be able to identify the appropriate Google Cloud products to use for popular architectural patterns
  syllabus:
    - title: Keeping things simple
      content:
        - Managing applications at scale
        - Describe the problems that Google addressed to allow them to deploy Google scale applications
        - Explain how using Google Cloud addresses each of the problems faced when designing for distributed scalable applications that are deployed across regions
        - Micro services
        - Security & compliance
    - title: Focusing on Your Business
      content:
        - Managing applications at scale
        - Describe the problems that Google addressed to allow them to deploy Google scale applications
        - Explain how using Google Cloud addresses each of the problems faced when designing for distributed scalable applications that are deployed across regions
        - Micro services
    - title: Embrace Failure
      content:
        - Decoupling
        - Self healing
        - Testing
    - title: Moving to the Cloud
      content:
        - Migrating applications to Google Cloud
        - Off site disaster recovery and archival with Google Cloud
        - Hybrid architectures and multi cloud deployments
        - Lock in is not an issue using Google Cloud
    - title: Architectural patterns using Google Cloud
      content:
        - Cloud Deployment manager
        - Image processing
        - Mobile applications
        - Big Data
        - Virtual network environments


CPB100:
  title: "Google Cloud Fundamentals: Big Data & Machine Learning"
  requirements: "To get the most of out of this course, participants should have:<ul><li>Basic proficiency with common query language such as SQL.</li><li>Experience with data modeling, extract, transform, load activities.</li><li>Developing applications using a common programming language such Python.</li><li>Familiarity with machine learning and/or statistics.</li></ul>"
  audience: "This class is intended for the following:<ul><li>Data analysts, Data scientists, Business analysts getting started with Google Cloud.</li><li>Individuals responsible for designing pipelines and architectures for data processing, creating and maintaining machine learning and statistical models, querying datasets, visualizing query results and creating reports.</li><li>Executives and IT decision makers evaluating Google Cloud for use by data scientists.</li></ul>"
  desc: "<p>This 8 hour instructor-led class introduces participants to the Big Data & Machine Learning capabilities of Google Cloud. It provides a quick overview of the Google Cloud and a deeper dive of the data processing capabilities. This course showcases the ease, flexibility, and power of big data solutions on Google Cloud.</p>"
  objectives: 
    description: "<p>This course teaches participants the following skills:</p>"
    bullets:
      - Identify the purpose and value of the key Big Data and Machine Learning products in the Google Cloud
      - Use CloudSQL and Cloud Dataproc to migrate existing MySQL and Hadoop/Pig/Spark/Hive workloads to Google Cloud
      - Employ BigQuery and Cloud Datalab to carry out interactive data analysis
      - Train and use a neural network using TensorFlow
      - Employ ML APIs
      - Choose between different data processing products on the Google Cloud
  syllabus:
    - title: Introducing Google Cloud
      content:
        - Google Platform Fundamentals Overview
        - Google Cloud Platform Big Data Products
    - title: Compute and Storage Fundamentals
      content:
        - CPUs on demand (Compute Engine)
        - A global filesystem (Cloud Storage)
        - CloudShell
        - "Lab: Set up a Ingest-Transform-Publish data processing pipeline"
    - title: Data Analytics on the Cloud
      content:
        - Stepping-stones to the cloud
        - "CloudSQL: your SQL database on the cloud"
        - "Lab: Importing data into CloudSQL and running queries"
        - Spark on Dataproc
        - "Lab: Machine Learning Recommendations with SparkML"
    - title: Scaling Data Analysis
      content:
        - Fast random access
        - Datalab
        - BigQuery
        - "Lab: Build machine learning dataset"
    - title: Machine Learning
      content:
        - Machine Learning with TensorFlow
        - "Lab: Carry out ML with TensorFlow"
        - Pre-built models for common needs
        - "Lab: Employ ML APIs"
    - title: Data Processing Architectures
      content:
        - Message-oriented architectures with Pub/Sub
        - Creating pipelines with Dataflow
        - Reference architecture for real-time and batch data processing
    - title: Summary
      content:
        - Why GCP?
        - Where to go from here
        - Additional Resources


CPB101:
  title: "Serverless Data Analysis with BigQuery and Cloud Dataflow (CPB101)"
  requirements: "Before attending this course, participants should have attended Google Cloud Fundamentals: Big Data & Machine Learning, experience using a SQL-like query language to analyze data and knowledge of either Python or Java."
  audience: "This class is intended for data analysts and data scientists responsible for: analyzing and visualizing big data, implementing cloud-based big data solutions, deploying or migrating big data applications to the public cloud, implementing and maintaining large-scale data storage environments, and transforming/processing big data."
  desc: "<p>This 8 hour instructor led course introduces participants to BigQuery and Cloud Dataflow for data analysis. Through a combination of instructor-led presentations, demonstrations, and hands-on labs, students learn how to carry out no-ops data warehousing, analysis and pipeline processing.</p>"
  objectives: 
    description: "<p>At the end of this course, participants will be able to:"
    bullets:
      - Build up a complex BigQuery using clauses, inner selects, built-in functions and joins
      - Load and export data to/from BigQuery
      - Identify need for nested, repeated fields and user-defined functions
      - Understand pipeline processing, terms and concepts
      - Write pipelines in Java or Python and launch them locally or in the Cloud
      - Implement Map, Reduce transforms in Dataflow pipelines.
      - Join datasets as side inputs
      - Interoperate Dataflow, BigQuery and Cloud Pub/Sub for real-time streaming
  syllabus:
    - title: Serverless data analysis with BigQuery
      content:
        - What is BigQuery?
        - Queries and functions
        - Load and export data
        - Advanced Capabilities
        - Performance and pricing
    - title: Serverless, autoscaling data pipelines with Dataflow
      content:
        - What is Dataflow?
        - Data pipeline
        - MapReduce in Dataflow
        - Side inputs
        - Streaming

CPB102:
  title: "Machine Learning with Cloud ML (CPB102)"
  requirements: "Before attending this course, participants should have attended Google Cloud Fundamentals: Big Data & Machine Learning, CPB101 - Serverless Data Analysis with BigQuery and Cloud Dataflow, knowledge of Python and familiarity with the numpy package, and knowledge of undergraduate-level stadistics to the level of Udacity ST101"
  audience: "This class is intended for programmers and data scientists responsible for developing predictive analytics using machine learning. The typical audience member has experience analyzing and visualizing big data, implementing cloud-based big data solutions, and transforming/processing datasets."
  desc: "<p>This 8 hour instructor led course introduces participants to Machine Learning, TensorFlow and Cloud ML. Through a combination of instructor-led presentations, demonstrations, and hands-on labs, students learn machine learning and develop hands-on skills in developing, evaluating, and productionizing machine learning models.</p>"
  objectives: 
    description: "<p><p>At the end of this course, participants will be able to:</p>"
    bullets:
      - Understand what kinds of problems machine learning can address
      - Build a machine learning model using TensorFlow
      - Build scalable, deployable ML models using Cloud ML
      - Know the importance of preprocessing and combining features
      - Incorporate advanced ML concepts into their models
      - Employ ML APIs
      - Productionize trained ML model
  syllabus:
    - title: Getting Started with Machine Learning
      content:
        - What is ML?
        - Effective ML
        - Evaluating ML
        - "ML datasets: generalization"
    - title: Building ML models with TensorFlow
      content:
        - Getting started
        - TensorFlow graphs and loops
        - Monitoring
    - title: Scaling ML models with Cloud ML
      content:
        - Why Cloud ML?
        - Packaging up a TensorFlow model
        - End-to-end training
    - title: Feature Engineering
      content:
        - Creating good features
        - Transforming inputs
        - Synthetic features
        - Preprocessing with Cloud ML
    - title: ML architectures
      content:
        - Wide and deep
        - Image analysis
        - Embeddings and sequences
        - Recommendation systems


CPB200:
  title: "Google BigQuery for Data Analysts (CPB200)"
  requirements: "Before attending this course, participants should have attended Google Cloud Fundamentals: Core Infrastructure OR Google Cloud Fundamentals: Big Data & Machine Learning (or equivalent experience) and expierence using a SQL-like query language to analyze data"
  audience: "This class is intended for data analysts and data scientists responsible for: analyzing and visualizing big data, implementing cloud-based big data solutions, deploying or migrating big data applications to the public cloud, implementing and maintaining large-scale data storage environments, and transforming/processing big data."
  desc: "<p>This 3 day instructor-led class introduces participants to Google BigQuery. Through a combination of instructor-led presentations, demonstrations and hands-on labs, students learn how to store, transform, analyze, and visualize data using Google BigQuery.</p>"
  objectives: 
    description: "<p>At the end of this course, participants will be able to:</p>"
    bullets:
      - Understand the purpose of and use cases for Google BigQuery
      - Describe ways in which customers have used Google BigQuery to improve their businesses
      - Understand the architecture of BigQuery and how queries are processed
      - Interact with BigQuery using the web UI and command-line interface
      - Identify the purpose and structure of BigQuery schemas and data types
      - Understand the purpose of and advantages of BigQuery destinations tables and caching
      - Use BigQuery jobs
      - Transform and load data into BigQuery
      - Export data from BigQuery
      - Store query results in a destination table
      - Create a federated query
      - Export log data to BigQuery and query it
      - Understand the BigQuery pricing structure and evaluate mechanisms for controlling query and storage costs
      - Identify best practices for optimizing query performance
      - Troubleshoot common errors in BigQuery
      - Use various BigQuery functions
      - Use external tools such as spreadsheets to interact with BigQuery
      - Visualize BigQuery data
      - Use access controls to restrict access to BigQuery data
      - Query Google Analytics Premium data exported to BigQuery
  syllabus: 
    - title: Introducing Google BigQuery
      content:
        - Understand the purpose of and use cases for Google BigQuery
        - Describe ways in which customers have used Google BigQuery to improve their businesses
    - title: BigQuery Functional Overview
      content:
        - Describe the components of a BigQuery project
        - Identify how BigQuery stores data and list the advantages of the storage model
        - Understand the architecture of BigQuery and how queries are processed
        - Describe the methods of interacting with BigQuery
    - title: BigQuery Fundamentals
      content:
        - Describe the purpose of denormalizing data
        - Identify the purpose and structure of BigQuery schemas and data types
        - Explain the types of actions available in BigQuery jobs
        - Understand the purpose of and advantages of BigQuery destinations tables and caching
    - title: Ingesting, Transforming, and Storing Data
      content:
        - Describe the methods for ingesting data, transforming data, and storing data using BigQuery
        - Explain the function of BigQuery federated queries
    - title: Pricing and Quotas
      content:
        - Explain the advantages of the BigQuery pricing model
        - Use the pricing calculator to calculate storage and query costs
        - Identify the quotas that apply to BigQuery projects
    - title: Clauses and Functions
      content:
        - Explain the differences between BigQuery SQL and ANSI SQL
        - Identify the purpose of and use cases for user-defined functions
        - Explain the purpose of various BigQuery functions
    - title: Nested and Repeated Fields
      content:
        - Identify the purpose and structure of BigQuery nested, repeated, and nested repeated fields
        - Describe the use cases for nested, repeated, and nested repeated fields
    - title: Query Performance
      content:
        - "Explain the impact of the following in query performance: JOIN and GROUP BY, table wildcards, and table decorators"
        - Identify various best practices for optimizing query performance
    - title: Troubleshooting Errors
      content:
        - "Describe how to handle the most common BigQuery errors: request encoding errors, resource errors, and HTTP errors"
    - title: Access Control
      content:
        - Describe the purpose of access control lists in BigQuery
        - List and explain the project and dataset roles available in BigQuery
        - Apply views for row-level security
    - title: Exporting Data
      content:
        - List the methods of exporting data from BigQuery and the data formats available
        - Describe the process of creating a job to export data from BigQuery
        - Explain the purpose of wildcard exports to partition export data
    - title: Interfacing with External Tools
      content:
        - "Describe how to use external tools to interface with BigQuery, including: spreadsheets, ODBC and JDBC drivers, the BigQuery encrypted client, and R"
    - title: Working with Google Analytics Premium Data
      content:
        - Describe the schema of the Google Analytics Premium and AdSense data exported to BigQuery
    - title: Data Visualization 
      content:
        - Describe the options available for visualizing BigQuery data


CPO200:
  title: "Google Cloud for Systems Operations Professionals (CPO200)"
  requirements: "Before attending this course, participants should have attended Google Cloud Fundamentals: Core Infrastructure (or equivalent experience), basic proficiency with command-line tools on linux operating system environments and prior systems operations experience, either on-premises or using a public cloud environment"
  audience: "This course is designed for Systems Operations professionals and Systems Administrators using Google Cloud to create or migrate application environments and infrastructure"
  desc: "<p>This 4 day instructor-led class introduces participants to the implementation of application environments and public cloud infrastructure using Google Cloud. Through a combination of instructor-led presentations and hands-on labs, students learn how to deploy cloud infrastructure components such as networks, systems and applications. This class is intended for Systems Operations professionals and Systems Administrators; Cloud Architects and DevOps personnel should enroll instead in the Architecting with Google Cloud course sequence.</p>"
  objectives: 
    description: "<p>At the end of this four-day course, participants will be able to:</p>"
    bullets:
      - Understand the core tenants to be considered when designing & deploying to a cloud
      - Use the Google Developers Console to create and manage multiple projects
      - Use service accounts and permissions to share view-level access between projects
      - Create Google Compute Engine instances
      - Create a non-default network and review your network configuration
      - Compare default and non-default networks
      - Create firewall-rules with and without tags
      - Create and use a customized Compute Engine image
      - Set authorization scopes for a Compute Engine instance
      - Reserve an external IP address for an instance
      - Snapshot a Compute Engine instance
      - Snapshot a data disk
      - Create an image using a boot persistent disk
      - Upload an image to Google Container Registry
      - Create a Compute Engine instance group with instances
      - Create a Cloud SQL instance using the Cloud SDK
      - Deploy and test a web application
      - Add instance and project metadata
      - Query instance and project metadata using the Cloud SDK
      - Create an instance using a startup script in metadata and Google Cloud Storage
      - Create an instance with a shutdown script and install the Cloud Logging agent
      - Use the API Explorer to query an API request
      - Run sample code that uses the Google API Client Library
      - Test and build a container that uses the Cloud SQL APIs
      - Create an instance template and managed instance group
      - Configure a managed instance group for autoscaling
      - Create multiple autoscaled managed instance groups
      - Configure fault-tolerant HTTP load balancing
      - Test health checks for use with HTTP load balancing
      - Manage application deployment using Jinja and Python templates with Google Cloud Deployment Manager
      - Delete Google Cloud projects and resources
  syllabus: 
    - title: Google Cloud Projects
      content:
        - Identify project resources and quotas
        - Explain the purpose of Google Cloud Resource Manager and Identity and Access Management
    - title: Instances
      content:
        - Explain how to create and move instances
        - Identify how to connect to and manage instances
    - title: Networks
      content:
        - Explain how to create and manage networks in projects
        - Identify how to create and manage firewall rules, routes, and IP addresses
    - title: Disks and Images
      content:
        - Explain how to create and manage persistent disks
        - Identify how to create and manage disk images
    - title: Authorization
      content:
        - Explain the purposes of and use cases for Google Compute Engine service accounts
        - Identify the types of service account scopes
    - title: Snapshots
      content:
        - Identify the purpose of and use cases for disk snapshots
        - Explain the process of creating a snapshot
    - title: Google Cloud Storage
      content:
        - Explain the purpose of and use cases for Google Cloud Storage
        - Identify methods for accessing Google Cloud Storage buckets and objects
        - Explain the security options available for Google Cloud Storage buckets and objects
    - title: Instance Groups
      content:
        - Identify the purpose of and use cases for instance groups
        - Explain the process of creating and using instance groups
    - title: Google Cloud SQL
      content:
        - Understand how to create and administer Cloud SQL instances
        - Explain how to access Cloud SQL instances from Compute Engine instances
    - title: Metadata
      content:
        - Explain the purpose of metadata and identify the use cases for project and instance metadata
        - Identify how to set and query metadata
    - title: Startup and Shutdown Scripts
      content:
        - Identify the purpose of and use cases for startup and shutdown scripts
    - title: Autoscaling
      content:
        - Explain the use cases for autoscaling and how autoscaling functions
        - Identify the purpose of autoscaling policies
    - title: Load Balancing
      content:
        - Explain the differences between network load balancing and HTTP load balancing
        - Identify the purpose of and use cases for cross-region and content-based load balancing

CPD200:
  title: "Developing Solutions with Google Cloud (CPD200)"
  requirements: "Before attending this course, participants should have attended Google Cloud Fundamentals: Core Infrastructure (or equivalent experience), basic proficiency with command-line tools and linux operating system environments, experience developing applications and APIs using a common programming language such as Java or Python and prior solutions development experience, either on-premises or in a public cloud environment"
  audience: "This course is designed for experienced application developers who want to learn how to develop solutions using Google Cloud to create highly scalable backends for both web and mobile applications."
  desc: This 3 day instructor-led class introduces participants to Solution Development for Google Cloud. Through a combination of instructor-led presentations, demonstrations, and hands-on labs, students learn how to develop cloud-based applications using Google App Engine Standard Environment, Google Cloud Datastore, Google Cloud Endpoints, and Google Cloud Repositories.
  objectives: 
    description: "<p>At the end of this course, participants will be able to:</p>"
    bullets:
      - Build scalable and reliable applications using Google App Engine Standard Environment.
      - Leverage Google Cloud Endpoints to implement, deploy, and manage API backends.
      - Create microservice-based applications using App Engine services.
      - Manage application security, versioning, deployment, and monitoring.
      - Store application data, optimize query performance, and use transactions in Google Cloud Datastore.
      - Provide improved performance and capacity with Memcache and instance scaling.
  syllabus: 
    - title: Developing Solutions with Google Cloud
      content:
        - Benefits of Google Cloud
        - Development tools and services for Google Cloud
        - Google Cloud solution architectures
        - "Lab: Google Cloud Source Repositories"
    - title: Google Cloud Endpoints
      content:
        - Cloud Endpoints features
        - Developing APIs using Cloud Endpoints
        - Accessing Cloud Endpoints APIs using JavaScript clients
        - "Lab: Google Cloud Endpoints"
    - title: App Engine Services
      content:
        - Modular application design and App Engine services
        - Deploying services
        - Accessing App Engine services
        - "Lab: Google App Engine Services"
    - title: User Authentication and Credentials
      content:
        - Authentication and authorization concepts
        - Securing access through application configuration
        - Authentication with the Users service
        - Authorization with API keys, OAuth, and application default credentials
        - "Lab: User Authentication"
    - title: Managing App Engine Applications
      content:
        - Deploying and managing multiple application versions
        - Traffic splitting, incremental rollouts, and canary releases
        - Budgets and quotas
        - Stackdriver logging and application tracing
        - "Lab: Managing Google App Engine Applications"
    - title: Storage for Solution Developers
      content:
        - Functionality and benefits of Cloud Platform storage options
        - Using Google Cloud Storage for immutable BLOB storage
        - Integrating Google Cloud SQL into App Engine Apps
        - Cloud Datastore fundamentals
        - "Lab: Google Cloud Datastore"
    - title: Queries and Indexes
      content:
        - Implementing query filters with Cloud Datastore
        - Single-property and composite indexes
        - Configuring and optimizing indexes
        - "Lab: Google Cloud Datastore Queries and Indexes"
    - title: Entity Groups, Consistency, and Transactions
      content:
        - Strong and eventual consistency in Cloud Datastore
        - Ensuring strongly consistent queries
        - Best practices for Cloud Datastore transactions
        - "Lab: Google Cloud Datastore Transactions"
    - title: App Engine Performance and Optimization
      content:
        - Memcache use cases and implementation patterns
        - Manual, basic, and automatic scaling behavior
        - Configuring application scaling
        - "Lab: Google App Engine Performance and Optimization"
    - title: Task Queues
      content:
        - Push and pull queue capabilities and configuration
        - Adding and consuming tasks with push and pull queues
        - Scheduling tasks with the Cron Service
        - "Lab: Task Queue API"
        - "Lab: Deleting Google Cloud Projects and Resources"


GCPArchitectingInfrastructure:
  title: "Architecting with Google Cloud: Infrastructure"
  requirements: "To get the most out of this course, participants should have completed Google Cloud Fundamentals (or have equivalent experience), basic proficiency with command-line tools and Linux operating system environments, and Systems Operations experience including deploying and managing applications, either on-premises or in a public cloud environment"
  audience: "This class is intended for experienced developers who are responsible for managing big data transformations including:<ul><li>Cloud Solutions Architects, Systems Operations professionals, DevOps Engineers, IT managers.</li><li>Individuals using Google Cloud to create new solutions or to integrate existing systems, application environments, and infrastructure with the Google Cloud.</li></ul>"
  desc: "<p>This three-day instructor-led class introduces participants to the comprehensive and flexible infrastructure and platform services provided by Google Cloud. Through a combination of presentations, demos, and hands-on labs, participants explore and deploy solution elements, including infrastructure components such as networks, systems and applications services. This course also covers deploying practical solutions including securely interconnecting networks, customer-supplied encryption keys, security and access management, quotas and billing, and resource monitoring.</p>"
  objectives:
    description: "<p>This course teaches participants the following skills:</p>"
    bullets:
      - Consider the entire range of Google Cloud technologies in their plans.
      - Learn methods to develop, implement, and deploy solutions.
      - Distinguish between features of similar or related products and technologies.
      - Recognize a wide variety of solution domains, use cases, and applications.
      - Develop essential skills for managing and administering solutions.
      - Develop knowledge of solution patterns -- methods, technologies, and designs that are used to implement security, scalability, high availability, and other desired qualities.
  syllabus:
    - title: Introduction to Google Cloud
      content:
        - Google Cloud Platform (GCP) Infrastructure
        - Using GCP
        - "Lab: Console and Cloud Shell"
        - "Demo: Projects"
        - "Lab: Infrastructure Preview"
    - title: Virtual Networks
      content:
        - Virtual Private Cloud (VPC), Projects, Networks, Subnetworks, IP addresses, Routes, Firewall rules
        - Subnetworks for resource management instead of physical network topology
        - "Lab: Virtual Networking"
        - "Lab: Bastion Host"
    - title: Virtual Machines
      content:
        - Compute Engine
        - "Lab: Creating Virtual Machines"
        - Compute options (vCPU and Memory)
        - Images
        - Common Compute Engine actions
        - "Lab: Working with Virtual Machines"
    - title: Cloud IAM
      content:
        - Organizations, Roles, Members, Service accounts, Cloud IAM best practices
        - "Lab: Cloud IAM"
    - title: Data Storage Services
      content:
        - Cloud Storage
        - "Lab: Cloud Storage"
        - Cloud SQL
        - "Lab: Cloud SQL"
        - Cloud Spanner, Cloud Datastore
        - "Lab: Cloud Datastore"
        - Cloud Bigtable
    - title: Resource Management
      content:
        - Cloud Resource Manager, Quotas, Labels, Names, Billing
        - "Demo: Billing Administration"
        - "Lab: Examining Billing Data with BigQuery"
    - title: Resource Monitoring
      content:
        - Stackdriver, Monitoring
        - "Lab: Resource Monitoring (Stackdriver)"
        - Logging, Error Reporting, Tracing, Debugging
        - "Lab: Error Reporting and Debugging (Stackdriver)"
    - title: Interconnecting Networks
      content:
        - Cloud Virtual Private Network (VPN)
        - "Lab: Virtual Private Networks (VPN)"
        - Cloud Router, Cloud Interconnect, External Peering, Cloud DNS
    - title: Load Balancing
      content:
        - Managed Instance Groups, HTTPS load balancing, Cross-region and content-based load balancing, SSL proxy/TCP proxy load balancing, Network load balancing
        - "Lab: VM Automation and Load Balancing"
    - title: Autoscaling
      content:
        - Autoscaling, Policies, Configuration
        - "Lab: Autoscaling"
    - title: Infrastructure Automation with Google Cloud Platform APIs
      content:
        - Infrastructure automation, Images, Metadata, Scripts, Google Cloud API
        - "Lab: Google Cloud Platform API Infrastructure Automation"
    - title: Infrastructure Automation with Deployment Manager
      content:
        - Deployment Manager, Configuration, Cloud Launcher
        - "Lab: Deployment Manager"
    - title: Managed Services
      content:
        - Cloud Dataproc, Cloud Dataflow, BigQuery, Cloud Datalab
    - title: Application Infrastructure Services
      content:
        - Cloud Pub/Sub, API Management, Cloud Functions, Cloud Source Repositories, Specialty APIs
    - title: Application Development Services
      content:
        - App Engine
    - title: Containers
      content:
        - Containers, Kubernetes Engine, Container Registry
        - "Lab: Kubernetes Load Balancing"
        - Kubernetes Engine, App Engine, or Containers on Compute Engine?

GCPDataEngineering:
  title: "Data Engineering on Google Cloud"
  requirements: "To get the most of out of this course, participants should have completed Google Cloud Fundamentals: Big Data & Machine Learning (or equivalent experience), basic proficiency with common query language such as SQL, experience with data modeling, extract, transform, load activities; developing applications using a common programming language such Python, and familiarity with Machine Learning and/or statistics"
  audience: "This class is intended for experienced developers who are responsible for managing big data transformations including:<ul><li>Extracting, Loading, Transforming, cleaning, and validating data</li><li>Designing pipelines and architectures for data processing</li><li>Creating and maintaining machine learning and statistical models</li><li>Querying datasets, visualizing query results and creating reports</li></ul>"
  desc: "<p>This four-day instructor-led class provides participants a hands-on introduction to designing and building data processing systems on Google Cloud. Through a combination of presentations, demos, and hand-on labs, participants will learn how to design data processing systems, build end-to-end data pipelines, analyze data and carry out machine learning. The course covers structured, unstructured, and streaming data.</p>"
  objectives:
    description: "<p>This course teaches participants the following skills:</p>"
    bullets:
      - Design and build data processing systems on Google Cloud
      - Process batch and streaming data by implementing autoscaling data pipelines on Cloud Dataflow
      - Derive business insights from extremely large datasets using Google BigQuery
      - Train, evaluate and predict using machine learning models using Tensorflow and Cloud ML
      - Leverage unstructured data using Spark and ML APIs on Cloud Dataproc
      - Enable instant insights from streaming data
  syllabus:
    - title: Google Cloud Dataproc Overview
      content:
        - Creating and managing clusters
        - Leveraging custom machine types and preemptible worker nodes
        - Scaling and deleting Clusters
        - "Lab: Creating Hadoop Clusters with Google Cloud Dataproc"
    - title: Running Dataproc Jobs
      content:
        - Running Pig and Hive jobs
        - Separation of storage and compute
        - "Lab: Running Hadoop and Spark Jobs with Dataproc"
        - "Lab: Submit and monitor jobs"
    - title: Integrating Dataproc with Google Cloud
      content:
        - Customize cluster with initialization actions
        - BigQuery Support
        - "Lab: Leveraging Google Cloud Services"
    - title: Making Sense of Unstructured Data with Google’s Machine Learning APIs
      content:
        - Google’s Machine Learning APIs
        - Common ML Use Cases
        - Invoking ML APIs
        - "Lab: Adding Machine Learning Capabilities to Big Data Analysis"
    - title: Serverless data analysis with BigQuery
      content:
        - What is BigQuery
        - Queries and Functions
        - "Lab: Writing queries in BigQuery"
        - Loading data into BigQuery
        - Exporting data from BigQuery
        - "Lab: Loading and exporting data"
        - Nested and repeated fields
        - Querying multiple tables
        - "Lab: Complex queries"
        - Performance and pricing
    - title: Serverless, autoscaling data pipelines with Dataflow
      content:
        - The Beam programming model
        - Data pipelines in Beam Python
        - Data pipelines in Beam Java
        - "Lab: Writing a Dataflow pipeline"
        - Scalable Big Data processing using Beam
        - "Lab: MapReduce in Dataflow"
        - Incorporating additional data
        - "Lab: Side inputs"
        - Handling stream data
        - GCP Reference architecture
    - title: Getting started with Machine Learning
      content:
        - What is machine learning (ML)
        - "Effective ML: concepts, types"
        - "ML datasets: generalization"
        - "Lab: Explore and create ML datasets"
    - title: Building ML models with Tensorflow
      content:
        - Getting started with TensorFlow
        - "Lab: Using tf.learn"
        - TensorFlow graphs and loops
        - "Lab: Using low-level TensorFlow + early stopping"
        - Monitoring ML training
        - "Lab: Charts and graphs of TensorFlow training"
    - title: Scaling ML models with CloudML
      content:
        - Why Cloud ML?
        - Packaging up a TensorFlow model
        - End-to-end training
        - "Lab: Run a ML model locally and on cloud"
    - title: Feature Engineering
      content:
        - Creating good features
        - Transforming inputs
        - Synthetic features
        - Preprocessing with Cloud ML
        - "Lab: Feature engineering"
    - title: Architecture of streaming analytics pipelines
      content:
        - "Stream data processing: Challenges"
        - Handling variable data volumes
        - Dealing with unordered/late data
        - "Lab: Designing streaming pipeline"
    - title: Ingesting Variable Volumes
      content:
        - What is Cloud Pub/Sub?
        - "How it works: Topics and Subscriptions"
        - "Lab: Simulator"
    - title: Implementing streaming pipelines
      content:
        - Challenges in stream processing
        - "Handle late data: watermarks, triggers, accumulation"
        - "Lab: Stream data processing pipeline for live traffic data"
    - title: Streaming analytics and dashboards
      content:
        - "Streaming analytics: from data to decisions"
        - Querying streaming data with BigQuery
        - What is Google Data Studio?
        - "Lab: build a real-time dashboard to visualize processed data"
    - title: High throughput and low-latency with Bigtable
      content: 
        - What is Cloud Spanner?
        - Designing Bigtable schema
        - Ingesting into Bigtable
        - "Lab: streaming into Bigtable"

GCPFromDataToInsights:
  title: From Data to Insights with Google Cloud
  requirements: "To get the most out of this course, participants should have basic proficiency with ANSI SQL."
  audience: "This class is intended for the following:<ul><li>Data Analysts, Business Analysts, Business Intelligence professionals</li><li>Cloud Data Engineers who will be partnering with Data Analysts to build scalable data solutions on Google Cloud</li></ul>"
  desc: "<p>Want to know how to query and process petabytes of data in seconds? Curious about data analysis that scales automatically as your data grows? Welcome to the Data Insights course!</p><p>This two-day instructor-led class teaches course participants how to derive insights through data analysis and visualization using the Google Cloud. The course features interactive scenarios and hands-on labs where participants explore, mine, load, visualize, and extract insights from diverse Google BigQuery datasets. The course covers data loading, querying, schema modeling, optimizing performance, query pricing, and data visualization.</p>"
  objectives:
    description: "<p>This course teaches participants the following skills:</p>"
    bullets:
      - Derive insights from data using the analysis and visualization tools on Google Cloud
      - Interactively query datasets using Google BigQuery
      - Load, clean, and transform data at scale
      - Visualize data using Google Data Studio and other third-party platforms
      - Distinguish between exploratory and explanatory analytics and when to use each approach
      - Explore new datasets and uncover hidden insights quickly and effectively
      - Optimizing data models and queries for price and performance
  syllabus:
    - title: Introduction to Data on the Google Cloud
      content:
        - Highlight Analytics Challenges Faced by Data Analysts
        - Compare Big Data On-Premise vs on the Cloud
        - Learn from Real-World Use Cases of Companies Transformed through Analytics on the Cloud
        - Navigate Google Cloud Project Basics
        - "Lab: Getting started with Google Cloud"
    - title: Big Data Tools Overview
      content:
        - Walkthrough Data Analyst Tasks, Challenges, and Introduce Google Cloud Data Tools
        - "Demo: Analyze 10 Billion Records with Google BigQuery"
        - Explore 9 Fundamental Google BigQuery Features
        - Compare GCP Tools for Analysts, Data Scientists, and Data Engineers
        - "Lab: Exploring Datasets with Google BigQuery"
    - title: Exploring your Data with SQL
      content:
        - Compare Common Data Exploration Techniques
        - Learn How to Code High Quality Standard SQL
        - Explore Google BigQuery Public Datasets
        - "Visualization Preview: Google Data Studio"
        - "Lab: Troubleshoot Common SQL Errors"
    - title: Google BigQuery Pricing
      content:
        - Walkthrough of a BigQuery Job
        - "Calculate BigQuery Pricing: Storage, Querying, and Streaming Costs"
        - Optimize Queries for Cost
        - "Lab: Calculate Google BigQuery Pricing"
    - title: Cleaning and Transforming your Data
      content:
        - Examine the 5 Principles of Dataset Integrity
        - Characterize Dataset Shape and Skew
        - Clean and Transform Data using SQL
        - "Clean and Transform Data using a new UI: Introducing Cloud Dataprep"
        - "Lab: Explore and Shape Data with Cloud Dataprep"
    - title: Storing and Exporting Data
      content:
        - Compare Permanent vs Temporary Tables
        - Save and Export Query Results
        - "Performance Preview: Query Cache"
        - "Lab: Creating new Permanent Tables"
    - title: Ingesting New Datasets into Google BigQuery
      content:
        - Query from External Data Sources
        - Avoid Data Ingesting Pitfalls
        - Ingest New Data into Permanent Tables
        - Discuss Streaming Inserts
        - "Lab: Ingesting and Querying New Datasets"
    - title: Data Visualization
      content:
        - Overview of Data Visualization Principles
        - Exploratory vs Explanatory Analysis Approaches
        - "Demo: Google Data Studio UI"
        - Connect Google Data Studio to Google BigQuery
        - "Lab: Exploring a Dataset in Google Data Studio"
    - title: Joining and Merging Datasets
      content:
        - Merge Historical Data Tables with UNION
        - Introduce Table Wildcards for Easy Merges
        - "Review Data Schemas: Linking Data Across Multiple Tables"
        - Walkthrough JOIN Examples and Pitfalls
        - "Lab: Join and Union Data from Multiple Tables"
    - title: Advanced Functions and Clauses
      content:
        - Review SQL Case Statements
        - Introduce Analytical Window Functions
        - Safeguard Data with One-Way Field Encryption
        - Discuss Effective Sub-query and CTE design
        - Compare SQL and Javascript UDFs
        - "Lab: Deriving Insights with Advanced SQL Functions"
    - title: Schema Design and Nested Data Structures
      content:
        - Compare Google BigQuery vs Traditional RDBMS Data Architecture
        - "Normalization vs Denormalization: Performance Tradeoffs"
        - "Schema Review: The Good, The Bad, and The Ugly"
        - Arrays and Nested Data in Google BigQuery
        - "Lab: Querying Nested and Repeated Data"
    - title: More Visualization with Google Data Studio
      content:
        - Create Case Statements and Calculated Fields
        - Avoid Performance Pitfalls with Cache considerations
        - Share Dashboards and Discuss Data Access considerations
    - title: Optimizing for Performance
      content:
        - Avoid Google BigQuery Performance Pitfalls
        - Prevent Hotspots in your Data
        - Diagnose Performance Issues with the Query Explanation map
        - "Lab: Optimizing and Troubleshooting Query Performance"
    - title: Advanced Insights
      content:
        - Introducing Cloud Datalab
        - Cloud Datalab Notebooks and Cells
        - Benefits of Cloud Datalab
    - title: Data Access
      content:
        - Compare IAM and BigQuery Dataset Roles
        - Avoid Access Pitfalls
        - Review Members, Roles, Organizations, Account Administration, and Service Accounts

DevelopingApplicationsWithGCP:
  title: Developing Applications with Google Cloud
  requirements: "To get the most benefit from this course, participants should have the following prerequisites:<ul><li>Completed Google Cloud Fundamentals or have equivalent experience</li><li>Working knowledge of Node.js</li><li>Basic proficiency with command-line tools and Linux operating system environments</li></ul>"
  audience: "Application developers who want to build cloud-native applications or redesign existing applications that will run on Google Cloud"
  desc: "<p>In this course, application developers learn how to design, develop, and deploy applications that seamlessly integrate components from the Google Cloud ecosystem. Through a combination of presentations, demos, and hands-on labs, participants learn how to use GCP services and pre-trained machine learning APIs to build secure, scalable, and intelligent cloud-native applications.</p>"
  objectives:
    description: "<p>This course teaches participants the following skills:</p>"
    bullets:
      - Use best practices for application development.
      - Choose the appropriate data storage option for application data.
      - Implement federated identity management.
      - Develop loosely coupled application components or microservices.
      - Integrate application components and data sources.
      - Debug, trace, and monitor applications.
      - Perform repeatable deployments with containers and deployment services.
      - Choose the appropriate application runtime environment; use Google Kubernetes Engine as a runtime environment and later switch to a no-ops solution with Google App Engine Flex.
  syllabus:
    - title: Best Practices for Application Development
      content:
        - Code and environment management
        - Design and development of secure, scalable, reliable, loosely coupled application components and microservices
        - Continuous integration and delivery
        - Re-architecting applications for the cloud
    - title: Google Cloud Client Libraries, Google Cloud SDK, and Google Firebase SDK
      content:
        - How to set up and use Google Cloud Client Libraries, Google Cloud SDK, and Google Firebase SDK
        - "Lab: Set up Google Client Libraries, Google Cloud SDK, and Firebase SDK on a Linux instance and set up application credentials"
    - title: Overview of Data Storage Options
      content:
        - Overview of options to store application data
        - Use cases for Google Cloud Storage, Google Cloud Datastore, Cloud Bigtable, Google Cloud SQL, and Cloud Spanner
    - title: Best Practices for Using Google Cloud Datastore
      content:
        - Queries
        - Built-in and composite indexes
        - Inserting and deleting data (batch operations)
        - Transactions
        - Error handling
        - Bulk-loading data into Cloud Datastore by using Google Cloud Dataflow
        - "Lab: Store application data in Cloud Datastore"
    - title: Performing Operations on Buckets and Objects
      content:
        - Operations that can be performed on buckets and objects
        - Consistency model
        - Error handling
    - title: Best Practices for Using Google Cloud Storage
      content:
        - Naming buckets for static websites and other uses
        - Naming objects (from an access distribution perspective)
        - Performance considerations
        - Setting up and debugging a CORS configuration on a bucket
        - "Lab: Store files in Cloud Storage"
    - title: Handling Authentication and Authorization
      content:
        - Cloud Identity and Access Management (IAM) roles and service accounts
        - User authentication by using Firebase Authentication
        - User authentication and authorization by using Cloud Identity-Aware Proxy
        - "Lab: Authenticate users by using Firebase Authentication"
    - title: Using Google Cloud Pub/Sub to Integrate Components of Your Application
      content:
        - Topics, publishers, and subscribers
        - Pull and push subscriptions
        - Use cases for Cloud Pub/Sub
        - "Lab: Develop a backend service to process messages in a message queue"
    - title: Adding Intelligence to Your Application
      content:
        - Overview of pre-trained machine learning APIs such as Cloud Vision API and Cloud Natural Language Processing API
    - title: Using Google Cloud Functions for Event-Driven Processing
      content:
        - Key concepts such as triggers, background functions, HTTP functions
        - Use cases
        - Developing and deploying functions
        - Logging, error reporting, and monitoring
    - title: Managing APIs with Google Cloud Endpoints
      content:
        - Open API deployment configuration
        - "Lab: Deploy an API for your application"
    - title: Deploying an Application by Using Google Cloud Container Builder, Google Cloud Container Registry, and Google Cloud Deployment Manager
      content:
        - Creating and storing container images
        - Repeatable deployments with deployment configuration and templates
        - "Lab: Use Deployment Manager to deploy a web application into Google App Engine flexible environment test and production environments"
    - title: Execution Environments for Your Application
      content:
        - Google Compute Engine
        - Kubernetes Engine
        - App Engine flexible environment
        - Cloud Functions
        - Cloud Dataflow
        - "Lab: Deploying your application on App Engine flexible environment"
    - title: Debugging, Monitoring, and Tuning Performance by Using Google Stackdriver
      content:
        - Stackdriver Debugger
        - Stackdriver Error Reporting
        - "Lab: Debugging an application error by using Stackdriver Debugger and Error Reporting"
        - Stackdriver Logging
        - Key concepts related to Stackdriver Trace and Stackdriver Monitoring.
        - "Lab: Use Stackdriver Monitoring and Stackdriver Trace to trace a request across services, observe, and optimize performance"

GCPArchitectingDesignAndProcess:
  title: "Architecting with Google Cloud: Design and Process"
  requirements: "To get the most out of this course, participants should have:<ul><li>Completed Architecting with Google Cloud: Infrastructure or have equivalent experience</li><li>Basic proficiency with command-line tools and Linux operating system environments</li><li>Systems Operations experience including deploying and managing applications, either on-premises or in a public cloud environment</li></ul>"
  audience: "This class is intended for the following participants:<ul><li>Cloud Solutions Architects, Site Reliability Engineers, Systems Operations professionals, DevOps Engineers, IT managers.</li><li>Individuals using Google Cloud to create new solutions or to integrate existing systems, application environments, and infrastructure with the Google Cloud.</li></ul>"
  desc: "<p>This two-day instructor-led class equips students to build highly reliable and efficient solutions on Google Cloud, using proven design patterns and the principles of Google Site Reliability Engineering (SRE). It is a continuation of the Architecting with Google Cloud: Infrastructure course and assumes hands-on experience with the technologies covered in that course.</p><p>Through a combination of presentations, demos, and hands-on labs, participants learn to design GCP deployments that are highly reliable and secure; and how to operate GCP deployments in a highly available and cost-effective manner.</p>"
  objectives:
    description: "<p>This course teaches participants the following skills:</p>"
    bullets:
      - Design for high availability, scalability, and maintainability.
      - Assess tradeoffs and make sound choices among Google Cloud products.
      - Integrate on-premises and cloud resources.
      - Identify ways to optimize resources and minimize cost.
      - Implement processes that minimize downtime, such as monitoring and alarming, unit and integration testing, production resilience testing, and incident post-mortem analysis.
      - Implement policies that minimize security risks, such as auditing, separation of duties and least privilege.
      - Implement technologies and processes that assure business continuity in the event of a disaster.
  syllabus:
    - title: Defining the Service
      content:
        - Design in this class.
        - State and solution.
        - Measurement.
        - Gathering requirements, SLOs, SLAs, and SLIs (key performance indicators).
    - title: Business-logic layer design
      content:
        - Microservices architecture.
        - GCP 12-factor support.
        - Mapping compute needs to Google Cloud processing services.
        - Compute system provisioning.
    - title: Data layer design
      content:
        - Classifying and characterizing data.
        - Data ingest and data migration.
        - Identification of storage needs and mapping to Google Cloud storage systems.
    - title: Presentation layer design
      content:
        - Network edge configuration.
        - Network configuration for data transfer within the service, including load balancing and network location.
        - Network integration with other environments, including on premise and multi-cloud.
    - title: Design for resiliency, scalability, and disaster recovery
      content:
        - Failure due to loss of resources.
        - Failure due to overload.
        - Strategies for coping with failure.
        - Business continuity and disaster recovery, including restore strategy and data lifecycle management.
        - Scalable and resilient design.
    - title: Design for security
      content:
        - Google Cloud security.
        - Network access control and firewalls.
        - Protections against denial of service.
        - Resource sharing and isolation.
        - Data encryption and key management.
        - Identity access and auditing.
    - title: Capacity planning and cost optimization
      content:
        - Capacity planning.
        - Pricing.
    - title: Deployment, monitoring and alerting, and incident response
      content:
        - Deployment.
        - Monitoring and alerting.
        - Incident response.

KubernetesAndGKE:
  title: Getting Started with Google Kubernetes Engine
  requirements: "To get the most of out of this course, participants should have:<ul><li>Basic proficiency with command-line tools and Linux operating system environments, as well as Web server technologies such as Nginx.</li><li>Systems Operations experience including deploying and managing applications, either on-premises or in a public cloud environment.</li></ul>"
  audience: "This class is intended for the following:<ul><li>Application developers, Cloud Solutions Architects, DevOps Engineers, IT managers.</li><li>Individuals using Google Cloud to create new solutions or to integrate existing systems, application environments, and infrastructure with the Google Cloud.</li></ul>"
  desc: "<p>Learn to containerize workloads in Docker containers, deploy them to Kubernetes clusters provided by Google Kubernetes Engine, and scale those workloads to handle increased traffic. You also learn how to continuously deploy new code in a Kubernetes cluster to provide application updates.</p>"
  objectives:
    description: "<p>This course teaches participants the following skills:</p>"
    bullets:
      - Understand container basics.
      - Containerize an existing application.
      - Understand Kubernetes concepts and principles.
      - Deploy applications to Kubernetes using the CLI.
      - Set up a continuous delivery pipeline using Spinnaker and/or Jenkins.
  syllabus:
    - title: Introduction to Containers and Docker
      content:
        - Create a container.
        - Package a container using Docker.
        - Store a container image in Google Container Registry.
        - Launch a Docker container.
    - title: Kubernetes Basics
      content:
        - Provision a complete Kubernetes cluster using Kubernetes Engine.
        - Deploy and manage Docker containers using kubectl.
        - Break an application into microservices using Kubernetes’ Deployments and Services.
    - title: Deploying to Kubernetes
      content:
        - Create a Kubernetes deployment.
        - Trigger, pause, resume, and rollback updates.
        - Understand and build canary deployments.
    - title: Creating a Continuous Delivery Pipeline
      content:
        - Provision Spinnaker or Jenkins in your Kubernetes cluster.
        - Manage application code in a source repository that can trigger code changes to a continuous delivery pipeline.
        - Create a continuous delivery pipeline and start it manually or automatically with a code change.
        - Implement a canary deployment that hosts two versions of your application in production for release testing.

GCPForAWSProfessionals:
  title: Google Cloud Fundamentals for AWS Professionals
  requirements: "To get the most of out of this course, participants should have:<ul><li>Basic proficiency with networking technologies like subnets and routing.</li><li>Experience with Amazon VPC, Amazon EC2 instances, and disks.</li><li>Familiarity with Amazon S3 and AWS database technologies.</li></ul>"
  audience: "This class is intended for the following:<ul><li>AWS Solution Architects just getting started with Google Cloud.</li><li>AWS SysOps Administrators used to building IaaS solutions.</li><li>Architects and Engineers operating in multi-cloud environments.</li></ul>"
  desc: "<p>This six-hour course with labs introduces AWS professionals to the core capabilities of Google Cloud (GCP) in the four technology pillars: networking, compute, storage, and database. It is designed for AWS Solution Architects and SysOps Administrators familiar with AWS features and setup and want to gain experience configuring GCP products immediately. With presentations, demos, and hands-on labs, participants get details of similarities, differences, and initial how-tos quickly.</p>"
  objectives:
    description: "<p>This course teaches participants the following skills:</p>"
    bullets:
      - Identify GCP counterparts for Amazon VPC, subnets, routes, NACLs, IGW, Amazon EC2, Amazon EBS, auto-scaling, Elastic Load Balancing, Amazon S3, Amazon Glacier, Amazon RDS, Amazon Redshift, AWS IAM, and more.
      - Configure accounts, billing, projects, networks, subnets, firewalls, VMs, disks, auto scaling, load balancing, storage, databases, IAM, and more.
      - Manage and monitor applications.
      - Explain feature and pricing model differences.
      - Locate documentation and training.
  syllabus:
    - title: Introducing Google Cloud
      content:
        - Google Cloud infrastructure.
        - AWS regions, availability zones, and CloudFront.
        - GCP regions, zones, edge caching, and Cloud CDN.
        - GCP services.
    - title: Setting up Accounts and Billing
      content:
        - AWS accounts, billing, and IAM roles.
        - GCP accounts, billing accounts, projects, and admin setup.
        - Account, billing, project, and admin setup.
        - "Lab: Set up projects and billing accounts with a free-trial GCP account."
    - title: Networking
      content:
        - Amazon VPC, subnets, routes, NACLs, and security groups.
        - GCP networks, subnets, routes, and firewall rules.
        - VMs in networks.
        - "Lab: Add VMs, explore the default network, and test connectivity."
    - title: Working with VM Instances
      content:
        - Amazon EC2 instance types, AMIs, Amazon EBS, ephemeral drives, spot instances.
        - Google Compute Engine machine types, instances, persistent disks, local SSDs, preemptible VMs.
        - VM and web app deployment.
        - "Lab: Deploy VMs with an app by console and command line."
    - title: Scaling and Load Balancing Apps
      content:
        - Amazon EC2 launch configurations, auto-scaling groups, load balancing.
        - Google Compute Engine instance templates, managed instance groups, load balancing.
        - Autoscaling and load balancing setup.
        - "Lab: Scale and load balance instances, and test under load."
    - title: Isolating Instances and Apps
      content:
        - A 3-tier web app in GCP.
        - A custom network with custom subnets and firewall rules.
        - "Lab: Build a 3-tier web app with public front-end and private backend."
    - title: Using Storage as a Service and Database as a Service
      content:
        - Amazon S3, Amazon Glacier, Amazon RDS, Amazon DynamoDB, Amazon Redshift, Amazon Athena.
        - Google Cloud Storage, Google Cloud SQL, Cloud Spanner, Google Cloud Datastore, Google Cloud Bigtable, Google BigQuery.
        - "Lab: Use gsutil command-line tool to perform operations on buckets and objects in Cloud Storage."
        - "Lab: Load and analyze data in BigQuery."
    - title: Deployment and Monitoring
      content:
        - AWS CloudFormation, Amazon CloudWatch.
        - Google Cloud Deployment Manager, Google StackDriver.
        - "Lab: Deploy your infrastructure using Deployment Manager."

KubernetesAndGKEAdvanced:
  title: Kubernetes Master Class
  requirements: "To get the most of out of this course, participants should have:<ul><li>Basic proficiency with command-line tools and Linux operating system environments.</li><li>Systems Operations experience including deploying and managing applications, either on-premises or in a public cloud environment.</li><li>No previous knowledge of Kubernetes is required.</li></ul>"
  audience: "This class is intended for the following:<ul><li>Application developers, Cloud Solutions Architects, DevOps Engineers.</li><li>Individuals using Google Cloud to create new solutions or to integrate existing systems, application environments, and infrastructure with the Google Cloud.</li></ul>"
  desc: "<p>This six-hour hands-on course introduces container orchestration, from the basics of Kubernetes to container-based CI/CD pipelines. The course is composed of 60% theory, 40% of hands-on code labs delivered using Google Cloud. Most of the contents of the course apply to any Kubernetes cluster, be it on premises or on any other Cloud provider. If you want to be ready to deploy containers in production easily, this is your course.</p>"
  objectives:
    description: "<p>This course teaches participants the following skills:</p>"
    bullets:
      - "Introduction to the basic components of Kubernetes: Pods, Services, Deployments, Replica Sets, Ingress."
      - Rolling updates and rollbacks.
      - "Best practices with Kubernetes: container image size, resource limits, liveness and readiness probes, pod/node affinity and antiaffinity, taints and tolerations."
      - Autoscaling, Autoupdates and Autorepair on Google Kubernetes Engine. Multi-zone clusters.
      - CI/CD pipelines with Kubernetes and Helm.
      - Monitoring and alerts with StackDriver.
      - "Updates from the last three Kubernetes versions: 1.6, 1.7, 1.8."
  syllabus:
    - title: Intro to Kubernetes
      content:
        - Pods, Nodes, Replica Sets, Deployments, Services, Persistent Volumes
        - Rolling updtaes and deployment rollback
        - Web console for Kubernetes and Kubernetes Engine 
        - Stateful workloads in Kubernetes
    - title: Best Practices
      content:
        - ConfigMaps and Secrets
        - Reserving Resources
        - Liveness and Readiness Probes
        - Static IP Addresses
        - Upgrading Kubernetes
        - Rolling out new container images
    - title: Updates in Kubernetes 1.6/1.7/1.8
      content:
        - Scheduling pods into nodes
        - Storage
        - Networking
        - Security
    - title: CI/CD with Kubernetes
      content:
        - Adding containers to your CI/CD pipeline
        - Kubernetes with Jenkins
        - Kubernetes with Container Builder

DeepLearningForText:
  title: Deep Learning for Text
  requirements: To get the most of out of this course, participants should have basic proficiency with Machine Learning and Python.
  audience: This class is intended for Data Analysts, Business Analysts and Cloud Data Engineers interested in getting started with deep learning models for texts.
  desc: "<p>This hands-on course course introduces deep learning techniques for text data with TensorFlow. At the end of the course, attendees will be able to create deep learning models for text, including NLP tasks, classification, tagging words, and more.</p>"
  objectives:
    description: "<p>This course teaches participants the following skills:</p>"
    bullets:
      - Create models to classify text.
      - Tagging words.
      - Build language models using deep learning techniques with your owns datasets.
  syllabus:
    - title: Intro to deep learning
      content: 
        - Overview
    - title: Intro to deep learning with text data
      content:
        - Intro to the recurrent neural networks. Basic and advanced models
        - "Development of models with deep recurrent neural networks: Network parametrization, training strategies, regularization and embeddings"
    - title: Intro to the working environment
      content:
        - GCP GPU machines
        - Jupyter notebook
        - TensorFlow
    - title: Use cases
      content:
        - "Use case 1: Classify texts into categories. Build a sentiment model from scratch"
        - "Use case 2: word labelling"
        - "Use case 3: Language models. Build a character level and a word level language models"

DeepLearningForImages:
  title: Deep Learning for Images
  requirements: To get the most of out of this course, participants should have basic proficiency with Machine Learning and Python.
  audience: This class is intended for Data Analysts, Business Analysts and Cloud Data Engineers interested in getting started with deep learning models for images.
  desc: "<p>This hands-on course course introduces deep learning techniques for images with TensorFlow. At the end of the course, attendees will be able to create deep learning models for images, including classification tasks and object detection.</p>"
  objectives:
    description: "<p>This course teaches participants the following skills:</p>"
    bullets:
      - Create models to classify images.
      - Detect objects.
      - Build models using deep learning techniques with your owns datasets.
  syllabus:
    - title: Intro to deep learning
      content: 
        - Overview
    - title: Intro to deep learning applied to images
      content:
        - Understand image data
        - Convolutional neural networks
    - title: Intro to the working environment
      content:
        - GCP GPU machines
        - Jupyter notebook
        - TensorFlow
    - title: "Use case 1: Classify images from scratch"
      content:
        - "Development of the models: Net parametrization, regularization and visualization of net and results"
        - "Data augmentation strategies"
    - title: "Use case 2: Classify images with pre-builded models - Transfer learning"
      content:
        - Understand the most relevant network architectures for image data
    - title: "Use case 3: Object detection in images. A first approach"
      content:
        - Develop of a first model to object detection in images

"notFoundTitle": "Not so fast, batman!"
"notFoundShort": "We couldn't find the page you were looking for."
"notFoundDesc": "Sorry, this page could not be found. Can you try again from the home page? This time, go slower."
"notFoundAlt": "We can still walk you to your destination. Just click the links above."

"Contact": "Contact"
"Spain": "Spain"
"emailTo": "Email to"
"Phone": "Phone"
"seeInGoogleMaps": "See in Google Maps"
"Italy": "Italy"

"CaseStudies": "Case studies"
"AenaDesc": "<b>Aena Air Navigation Messaging System</b> During this 1-year project a team with no prior experience was formed to develop a real-time messaging system for air navigation messages that connects 10+ data sources with error recovery."
IndraDesc: "<b>Vessel Traffic System</b> A team was created from scratch for this six-month project to develop a system that could control the maritime traffic of the coast of Poland, including 20+ different types of navigation alarms (hazards, collisions, restricted areas) and the integration of multiple real-time detection systems (radar, video, goniometer..) with a NoSQL back-end."
"BdeDesc": "<b>Architecture for application development</b> This one-year project redesigned the architecture to migrate existing systems to a Spring-based platform. This project included a team of six architects, two of them from the bank."
"BBVADesc": "<b>E-banking platform</b> Development of the e-banking platform for the private banking branch of BBVA. This project includes the full development of a web front-end that enables access to user assets, including real-time reports of portfolio positions. The final product includes the integration of a complex security platform based on state-of-the-art authentication systems."
"ONUDesc": "<b>Web technologies training</b> The Office of the High Commissioner of Human Rights of the United Nations has received an intensive series of training courses on HTML5 and CSS3 technologies to better support their Intranet and Extranet sites."
"moreCaseStudies": "More case studies"

"CookiePolicy": "Cookie Policy"
"cookiePolicyTitle": "This web site uses cookies."
"cookiePolicyDesc": "We use first and third-party cookies to improve our service. If you continue, we will assume that you accept our <a href=\"/en/cookies\">cookie policy</a>."
"Accept": "Accept"
"cookiePolicyDescLong": "<p>Every web site uses cookies to improve the user experience. You can block them through your browsers settings, but this will disable some features.</p><ul><li><b>Customization:</b> We use cookies to override the preferred language, in case it's not the same as your browser default.</li><li><b>Analytics and research:</b> We use cookies to keep track of the kind of features that people love. They help us to build a better user experience.</li></ul><p>You can block or remove cookies using the options menu in your browser."

"redirectTitle": "This page has moved!"
"redirectDesc": "You are being redirected automatically. If it takes too long, use the link below."
"redirectClick": "New page"