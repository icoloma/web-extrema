
mixin typeComboOption(type, option)
  -var chosen = type === option ? "selected" : false
  option(selected=chosen) !{option}


mixin formatEditionCombos(label, name, list, origin, defaults)
  -var classes = ['control-group']
  -if(origin) {
  -  classes.push('success')
  -}
  div(class=classes)
    label !{label}
    select(name=name)
      -list.forEach(function (option) {
      -var id = option._id.toString()
      -var name = option.name.en || option.name
      -var id_default = defaults && defaults._id && defaults._id.toString()
    
      -var check = id === origin ? 'selected' : false
    
      option(selected=check,label=name) !{id}
      -})

mixin i18nTextInput(lang, label, field, options, content)
  .control-group
    label !{label + ' (' + lang + ')'}
    -var contentTag = content && content[lang] && ('value="' + content[lang] + '"') || '';
    |<input type="text" name=!{field + '.' + lang} !{options || ''} !{contentTag}>

mixin i18nTextarea(lang, label, field, content)
  -var parsedContent = content && content[lang] || '';
  .control-group
    label !{label + ' (' + lang + ')'}
    textarea(name= field + '.' + lang).description-input
      !{parsedContent}