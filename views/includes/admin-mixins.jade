
mixin typeComboOption(type, option)
  -var chosen = type === option ? "selected" : false
  option(selected=chosen) !{option}


mixin formatEditionCombos(label, name, list, origin, defaults)
  -var classes = ['control-group']
  -if(origin) {
  -  classes.push('success')
  -}
  div(class=classes)
    label !{label}
    select(name=name)
      -list.forEach(function (option) {
      -var id = option._id.toString()
      -var name = option.name.en || option.name
      -var id_default = defaults && defaults._id && defaults._id.toString()
    
      -var check = id === origin ? 'selected' : false
    
      option(selected=check,label=name) !{id}
      -})

mixin i18nTextInput(label, field, options, content)
  -appLocales.forEach(function (locale) {
    .control-group
      label !{label + ' (' + locale + ')'}
      |<input type="text" name=!{field + '.' + locale} !{options || ''}>
  -})



mixin i18nTextarea(label, field, options, content)
  -appLocales.forEach(function (locale) {
    .control-group
      label !{label + ' (' + locale + ')'}
      |<textarea rows=5 name=!{field + '.' + locale} !{options || ''}>
      |#{content && content[locale] || ''}
      |</textarea>

  -})